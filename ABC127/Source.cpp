#include <iostream>#include <vector>#define MAX 100000000#define UPPER 10000#define LOWER 100000using namespace std;vector<int> nums0; // Avector<int> nums1; // Avector<int> nums2; // Avector<int> nums3; // Avector<int> nums4; // Avector<int> nums5; // Avector<int> nums6; // Avector<int> nums7; // Avector<int> nums8; // Avector<int> nums9; // Avector<int>& retNum(int num) {	switch (num)	{	case 0:		return nums0;	case 1:		return nums1;	case 2:		return nums2;	case 3:		return nums3;	case 4:		return nums5;	case 6:		return nums6;	case 7:		return nums7;	case 8:		return nums8;	case 9:		return nums9;	default:		break;	}}int main(void) {	// 基数ソートが使えそう？ 	// Cが大きいのでごりおす	int N, M; // 枚数, 操作回数	//int nums[UPPER][LOWER];	int card_num; // 入力された数	cin >> N >> M;	nums0.resize(MAX);	nums1.resize(MAX);	nums2.resize(MAX);	nums3.resize(MAX);	nums4.resize(MAX);	nums5.resize(MAX);	nums6.resize(MAX);	nums7.resize(MAX);	nums8.resize(MAX);	nums9.resize(MAX);		for (int i = 0; i < N; ++i) {		cin >> card_num;		//++nums[card_num / LOWER][card_num % LOWER];		++nums[card_num];	}	int B, C;	int selected_num;	int min_num = 1; // 現在あるカードの最低値	for (int i = 0; i < M; ++i) {		cin >> B >> C;		selected_num = 0;		for (int j = min_num; j < C;) {			//if (nums[j / LOWER][j % LOWER] > 0) {			if (nums[j] > 0) {				// Cより小さい値があるなら				// そのカードの値をCに変更				//--nums[j / LOWER][j % LOWER];				//++nums[C / LOWER][C % LOWER];				--nums[j];				++nums[C];				++selected_num;				if (selected_num >= B) {					// B枚選んだら終わり					break;				}				continue;			}			// その値のカードが一枚もないなら次の値へ			++j;			++min_num;		}	}	int sum = 0;	for (int i = 1; i < MAX; ++i) {		//sum += nums[i / LOWER][i % LOWER] * i;		sum += nums[i] * i;	}	cout << sum << endl; 	return 0; }//#include <iostream>////using namespace std;////int main(void) {////	int N, M;//	int min = 0, max = 100001;//	int L, R;////	cin >> N >> M;////	for (int i = 1; i <= M; ++i) {////		cin >> L >> R;////		if (min < L) min = L;//		if (R < max) max = R;////	}////	if (N < min) {//		cout << '0' << endl;//	}//	else if (max < N) {//		cout << max - min + 1 << endl;//	}//	else {//		cout << N - min + 1 << endl;//	}////	return 0;//}